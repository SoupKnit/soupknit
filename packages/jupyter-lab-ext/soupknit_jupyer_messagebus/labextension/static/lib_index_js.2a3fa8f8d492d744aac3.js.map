{"version":3,"file":"lib_index_js.2a3fa8f8d492d744aac3.js","mappings":";;;;;;;;;;;;;;;;;AAMqD;AACoB;AAGzE;;GAEG;AACH,MAAM,MAAM,GAAgC;IAC1C,EAAE,EAAE,yCAAyC;IAC7C,SAAS,EAAE,IAAI;IACf,QAAQ,EAAE,CAAC,+DAAa,EAAE,kEAAgB,CAAC;IAC3C,QAAQ,EAAE,CACR,GAAoB,EACpB,YAA2B,EAC3B,SAA2B,EAC3B,EAAE;QACF,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;QAElD,MAAM;QAEN,QAAQ;QACR,8CAA8C;QAC9C,2BAA2B;QAC3B,4BAA4B;QAE5B,kCAAkC;QAClC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,KAAmB,EAAE,EAAE;YACzD,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;YAC3D,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,cAAc,EAAE;gBACtC,IAAI,YAAY,CAAC,KAAK,KAAK,iBAAiB,EAAE;oBAC5C,YAAY,CAAC,QAAQ,CAAC,kBAAkB,CAAC,CAAC;iBAC3C;qBAAM;oBACL,YAAY,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;iBAC1C;aACF;YAED,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,UAAU,EAAE;gBAClC,MAAM,OAAO,GAAG,SAAS,CAAC,aAAa,CAAC;gBACxC,IAAI,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;oBAChC,OAAO;iBACR;gBACD,MAAM,QAAQ,GAAG,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,OAAO,CAAC;gBAClC,iEAAe,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;gBACtC,MAAM,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;gBACvC,UAAU;oBACR,KAAK,CAAC,IAAI,CAAC,OAAO;oBAClB,UAAU,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC9D;QACH,CAAC,CAAC,CAAC;QAEH,kCAAkC;QAClC,MAAM,kBAAkB,GAAG,GAAS,EAAE;YACpC,MAAM,OAAO,GAAG;gBACd,IAAI,EAAE,qBAAqB;gBAC3B,KAAK,EAAE,YAAY,CAAC,KAAK;aAC1B,CAAC;YACF,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;YACxC,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,OAAO,CAAC,CAAC;QACpD,CAAC,CAAC;QACF,YAAY,CAAC,YAAY,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC;IACxD,CAAC;CACF,CAAC;AAEF,iEAAe,MAAM,EAAC","sources":["webpack://soupknit-jupyer-messagebus/./src/index.ts"],"sourcesContent":["import {\n  // ILabShell,\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\n\nimport { IThemeManager } from '@jupyterlab/apputils';\nimport { INotebookTracker, NotebookActions } from '@jupyterlab/notebook';\nimport { ManagedEvent } from './event';\n\n/**\n * Initialization data for the jupyterlab-iframe-bridge-example extension.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'jupyterlab-iframe-bridge-example:plugin',\n  autoStart: true,\n  requires: [IThemeManager, INotebookTracker],\n  activate: (\n    app: JupyterFrontEnd,\n    themeManager: IThemeManager,\n    notebooks: INotebookTracker\n  ) => {\n    console.log('JupyterLab iframe-bridge is active');\n\n    // app\n\n    // shell\n    // labShell.toggleTopInSimpleModeVisibility();\n    // labShell.collapseLeft();\n    // labShell.collapseRight();\n\n    /* Incoming messages management */\n    window.addEventListener('message', (event: ManagedEvent) => {\n      console.log('Message received in the iframe:', event.data);\n      if (event.data.type === 'toggle_theme') {\n        if (themeManager.theme === 'JupyterLab Dark') {\n          themeManager.setTheme('JupyterLab Light');\n        } else {\n          themeManager.setTheme('JupyterLab Dark');\n        }\n      }\n\n      if (event.data.type === 'add_cell') {\n        const current = notebooks.currentWidget;\n        if (!current || !current.content) {\n          return;\n        }\n        const notebook = current?.content;\n        NotebookActions.insertBelow(notebook);\n        const activeCell = notebook.activeCell;\n        activeCell &&\n          event.data.content &&\n          activeCell.model.sharedModel.setSource(event.data.content);\n      }\n    });\n\n    /* Outgoing messages management */\n    const notifyThemeChanged = (): void => {\n      const message = {\n        type: 'from-iframe-to-host',\n        theme: themeManager.theme\n      };\n      window.parent.postMessage(message, '*');\n      console.log('Message sent to the host:', message);\n    };\n    themeManager.themeChanged.connect(notifyThemeChanged);\n  }\n};\n\nexport default plugin;\n"],"names":[],"sourceRoot":""}